#include <bits/stdc++.h>
#define sz(a) ((int)a.size())
using ch = unsigned char;
using PII = std::pair<int, int>;
using ll = int64_t;
using vi = std::vector<int>;
using vc = std::vector<ch>;
using vl = std::vector<ll>;
using vb = std::vector<bool>;
using vpii = std::vector<PII>;
using vvi = std::vector<vi>;
using vvc = std::vector<vc>;

using namespace std;

ostream&
operator<<(ostream& os, const vector<int>& vec)
{{
    for (auto& it : vec) {{
	os << it << " ";
    }}
    cout << "\n";
    return os;
}}

template<typename... Args>
void
dbg_out_impl(char const* const func,
	 char const* const file,
	 int const& line,
	 Args&&... args)
{{
    std::cout << func << ' ' << ':' << line;
    ((std::cout << ' ' << args), ...) << '\n';
}}

#ifdef ONPC
    #define dbg(...) dbg_out_impl(__func__, __FILE__, __LINE__, __VA_ARGS__)
#else
    #define dbg(...)
#endif

// mt19937 rnd(chrono::steady_clock_now().epoch().count());

template<typename T>
T
_mod(T n, const int mod = 1e9 + 7)
{{
    return n >= 0 ? n % mod : mod - ((-n) % mod);
}}

int
nxt() {{
	int temp;
	cin >> temp;
	return temp;
}}

void
solve()
{{
    {}
}}

int32_t
main()
{{
    ios::sync_with_stdio(false);
    cin.tie(0);
    int32_t t = 1;
    // std::cin >> t;
    for (int i{{ t }}; t > 0; t--) {{
	solve();
	dbg("-----------------------------------------");
    }}
    dbg("took ", clock() * 1.0 / CLOCKS_PER_SEC, "sec\n");
    return 0;
}}
